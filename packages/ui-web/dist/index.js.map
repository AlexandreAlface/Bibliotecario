{"version":3,"sources":["../src/theme.ts","../src/ThemeProvider.tsx","../src/components/Buttons/PrimaryButton.tsx","../src/components/Buttons/SecondaryButton.tsx","../src/components/TextFields/EmailField.tsx","../src/components/TextFields/BaseTextField.tsx","../src/components/TextFields/NumericField.tsx","../src/components/TextFields/PasswordField.tsx","../src/components/Divider/SectionDivider.tsx","../src/components/Link/RouteLink.tsx","../src/components/Card/WhiteCard.tsx","../src/components/Background/GradientBackground.tsx","../src/components/StepCard/InfoStepCard.tsx","../src/components/HowItWorks/HowItWorksSection.tsx","../src/components/Logo/Logo.tsx","../src/components/SelectableOptions/SelectableOptions.tsx","../src/components/AvatarUpload/AvatarUpload.tsx","../src/components/AvatarListItem/AvatarListItem.tsx","../src/components/SidebarMenu/SidebarToggle.tsx","../src/components/SidebarMenu/SidebarMenu.tsx","../src/components/NotificationBell/NotificationBell.tsx","../src/components/AvatarSelect/AvatarSelect.tsx","../src/components/QuizProgressBar/QuizProgressBar.tsx","../src/components/SimpleDataTable/ColumnFilterPopper.tsx","../src/components/SimpleDataTable/SimpleDataTable.tsx","../src/components/BookCard/BookCard.tsx","../src/hooks/useAgendaFeed.ts","../src/components/AgendaFeed/AgendaFeed.tsx","../src/components/AgendaFeed/AgendaLargeCard.tsx","../src/components/Filter/FilterBar.tsx","../src/components/Paginator/Paginator.tsx","../src/components/QuizQuestion/QuizQuestion.tsx","../src/components/SearchBar/SearchBar.tsx"],"names":["createTheme","jsxs","ThemeProvider","jsx","CssBaseline","styled","MuiButton","shouldForwardProp","theme","alpha","Styled","forwardRef","EmailField","TextField","PasswordField","useState","InputAdornment","IconButton","VisibilityOff","Visibility","Divider","Typography","Link","RouteLink","Card","Box","Stack","FormControl","FormLabel","FormGroup","FormControlLabel","Checkbox","RadioGroup","Radio","useRef","useEffect","Avatar","PhotoCameraIcon","EditIcon","DeleteIcon","Tooltip","ChevronLeftIcon","ChevronRightIcon","ListItemButton","ListItemIcon","ListItemText","Fragment","Drawer","List","Badge","NotificationsNoneIcon","Menu","ListItem","DeleteOutlineIcon","MenuItem","PersonOutlineIcon","InputLabel","Select","ListItemAvatar","useMemo","LinearProgress","linearProgressClasses","Popper","ClickAwayListener","ClearIcon","DoneIcon","_a","Paper","TableContainer","Table","TableHead","TableRow","TableCell","FilterAltIcon","TableBody","TablePagination","useTheme","CardMedia","CardContent","Rating","Button","Grid","AccessTimeIcon","LocationOnIcon","Collapse","ArrowDropDownIcon","Chip","CloseIcon","Pagination","CardActionArea","SearchIcon"],"mappings":"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","file":"index.js","sourcesContent":["import { createTheme } from '@mui/material/styles';\r\n\r\n\r\nconst palette = {\r\n  primary:{ main: '#05a79e', contrastText: '#ffffff' }, // verde\r\n  secondary:  { main: '#f6941f', contrastText: '#ffffff' }, // roxo\r\n  // secondaryComplement:  { main: '#fab041', contrastText: '#ffffff' }, // roxo\r\n  background: {\r\n    default: '#fafafa',\r\n    paper:   '#ffffff',\r\n  },\r\n};\r\n\r\n\r\nexport type SizeProps = {\r\n  radius?: number; // unidades de spacing do tema\r\n  px?: number;     // padding horizontal em spacing\r\n};\r\n\r\nexport const theme = createTheme({\r\n  palette,\r\n  typography: {\r\n    fontFamily: 'Poppins, Arial, sans-serif',\r\n    fontWeightRegular: 400,\r\n    fontWeightMedium: 500,\r\n    fontWeightBold: 600,\r\n    button: { textTransform: 'none', fontWeight: 500 },\r\n  },\r\n  shape: { borderRadius: 16 },\r\n  components: {\r\n    /* exemplo de override global */\r\n    MuiButton: {\r\n      styleOverrides: {\r\n        root: { borderRadius: 32, paddingInline: 24 },\r\n      },\r\n      defaultProps: {\r\n        disableElevation: true,\r\n      },\r\n    },\r\n  },\r\n});\r\n","import { ThemeProvider, CssBaseline } from '@mui/material';\r\nimport { theme } from './theme';\r\nimport React, { PropsWithChildren } from 'react';\r\n\r\n/**\r\n * BibliotecarioThemeProvider is a custom theme provider that applies the MUI theme\r\n * and CssBaseline to the application.\r\n *\r\n * @param {PropsWithChildren} props - The props containing children components.\r\n * @returns {JSX.Element} The ThemeProvider with the applied theme and CssBaseline.\r\n */\r\nexport function BibliotecarioThemeProvider({ children }: PropsWithChildren) {\r\n  return (\r\n    <ThemeProvider theme={theme}>\r\n      <CssBaseline />\r\n      {children}\r\n    </ThemeProvider>\r\n  );\r\n}\r\n","// src/components/Button/PrimaryButton.tsx\r\nimport {\r\n  styled,\r\n  alpha,\r\n  Button as MuiButton,\r\n  type ButtonProps,\r\n} from '@mui/material';\r\nimport { shouldForwardProp } from '@mui/system';\r\nimport { SizeProps } from '../../theme';\r\n\r\ninterface PrimaryProps extends ButtonProps, SizeProps {}\r\n\r\nconst Styled = styled(MuiButton, {\r\n  // Impede que props customizadas vão parar ao DOM\r\n  shouldForwardProp: (prop) => shouldForwardProp(prop) && prop !== 'radius' && prop !== 'px',\r\n})<SizeProps>(({ theme, radius = 4, px = 3 }) => ({\r\n  borderRadius: theme.spacing(radius),\r\n  paddingInline: theme.spacing(px),\r\n  textTransform: 'none',\r\n  fontWeight: 600,\r\n  boxShadow: 'none',\r\n  lineHeight: 1.5,\r\n\r\n  '&:hover': {\r\n    backgroundColor: alpha(theme.palette.primary.main, 0.9),\r\n    boxShadow: 'none',\r\n  },\r\n\r\n  '&:disabled': {\r\n    backgroundColor: theme.palette.action.disabledBackground,\r\n    color: theme.palette.action.disabled,\r\n  },\r\n\r\n  '&.Mui-focusVisible': {\r\n    outline: `2px solid ${alpha(theme.palette.primary.light, 0.8)}`,\r\n    outlineOffset: 2,\r\n  },\r\n}));\r\n\r\nexport function PrimaryButton(props: PrimaryProps) {\r\n  return (\r\n    <Styled\r\n      variant=\"contained\"\r\n      color=\"primary\"\r\n      disableElevation\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","// src/components/Button/SecondaryButton.tsx\r\nimport { styled, Button as MuiButton, type ButtonProps } from '@mui/material';\r\nimport { shouldForwardProp } from '@mui/system';\r\nimport { SizeProps } from '../../theme';\r\n\r\ninterface SecondaryProps extends ButtonProps, SizeProps {}\r\n\r\nconst Styled = styled(MuiButton, {\r\n  shouldForwardProp: (prop) => shouldForwardProp(prop) && prop !== 'radius' && prop !== 'px',\r\n})<SizeProps>(({ theme, radius = 4, px = 3 }) => ({\r\n  borderRadius: theme.spacing(radius),\r\n  paddingInline: theme.spacing(px),\r\n  textTransform: 'none',\r\n  fontWeight: 500,\r\n  backgroundColor: theme.palette.common.white,\r\n  color: theme.palette.primary.main,\r\n  border: `2px solid ${theme.palette.primary.main}`,\r\n\r\n  '&:hover': {\r\n    backgroundColor: theme.palette.primary.main,\r\n    color: theme.palette.common.white,\r\n    borderColor: theme.palette.primary.main,\r\n  },\r\n\r\n  '&:disabled': {\r\n    backgroundColor: theme.palette.action.disabledBackground,\r\n    color: theme.palette.action.disabled,\r\n    borderColor: theme.palette.action.disabledBackground,\r\n  },\r\n}));\r\n\r\nexport function SecondaryButton(props: SecondaryProps) {\r\n  return <Styled variant=\"outlined\" {...props} />;\r\n}\r\n","import { forwardRef } from 'react';\r\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\r\n\r\ntype Props = Omit<TextFieldProps, 'type' | 'variant'> & {\r\n  inputRef?: React.Ref<HTMLInputElement>; // compat\r\n};\r\n\r\nexport const EmailField = forwardRef<HTMLInputElement, Props>(function EmailField(\r\n  { inputRef, ...props },\r\n  ref\r\n) {\r\n  return (\r\n    <TextField\r\n      {...props}\r\n      type=\"email\"\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      inputRef={ref ?? inputRef}\r\n    />\r\n  );\r\n});\r\n","import { styled, shouldForwardProp } from '@mui/system';\r\nimport { TextField, type TextFieldProps } from '@mui/material';\r\n\r\nexport interface BaseProps {\r\n  radius?: number;\r\n  px?: number;\r\n  py?: number;\r\n}\r\n\r\nexport const BaseTextField = styled(TextField, {\r\n  shouldForwardProp: (prop) =>\r\n    shouldForwardProp(prop) && !['radius', 'px', 'py'].includes(prop as string),\r\n})<TextFieldProps & BaseProps>(\r\n  ({ theme, radius = 3, px = 2, py = 1.5 }) => ({\r\n    '& .MuiOutlinedInput-root': {\r\n      borderRadius: theme.spacing(radius),\r\n\r\n      '& input': {\r\n        padding: theme.spacing(py, px),\r\n        fontSize:\r\n          // pxToRem não está tipado em versões antigas, usa fallback\r\n          // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n          (theme.typography as any).pxToRem\r\n            ? // @ts-expect-error – método não existe nos tipos antigos\r\n              theme.typography.pxToRem(14)\r\n            : '0.875rem',\r\n        lineHeight: 1.25,\r\n      },\r\n\r\n      '& fieldset': { borderColor: theme.palette.grey[400] },\r\n      '&:hover fieldset': { borderColor: theme.palette.primary.main },\r\n      '&.Mui-focused fieldset': { borderColor: theme.palette.primary.main },\r\n    },\r\n\r\n    '& .MuiInputLabel-root': {\r\n      fontSize:\r\n        // eslint-disable-next-line @typescript-eslint/no-explicit-any\r\n        (theme.typography as any).pxToRem\r\n          ? // @ts-expect-error idem\r\n            theme.typography.pxToRem(14)\r\n          : '0.875rem',\r\n      lineHeight: 1.2,\r\n    },\r\n    '& .MuiInputLabel-shrink': {\r\n      transform: 'translate(14px, -6px) scale(0.85)',\r\n    },\r\n  }),\r\n);\r\n","// NumericField.tsx\r\n\r\nimport { BaseProps, BaseTextField } from './BaseTextField';\r\nimport type { TextFieldProps } from '@mui/material';\r\n\r\nexport function NumericField(props: TextFieldProps & BaseProps) {\r\n  return (\r\n    <BaseTextField\r\n      label=\"Número de telemóvel\"\r\n      type=\"tel\"\r\n      inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n","// packages/ui-web/src/components/TextFields/PasswordField.tsx\r\nimport { forwardRef, useState } from 'react';\r\nimport TextField, { TextFieldProps } from '@mui/material/TextField';\r\nimport InputAdornment from '@mui/material/InputAdornment';\r\nimport IconButton from '@mui/material/IconButton';\r\nimport Visibility from '@mui/icons-material/Visibility';\r\nimport VisibilityOff from '@mui/icons-material/VisibilityOff';\r\n\r\n\r\ntype Props = Omit<TextFieldProps, 'type' | 'variant'> & {\r\n  inputRef?: React.Ref<HTMLInputElement>;\r\n};\r\n\r\nexport const PasswordField = forwardRef<HTMLInputElement, Props>(function PasswordField(\r\n  { InputProps, ...rest },\r\n  ref\r\n) {\r\n  const [show, setShow] = useState(false);\r\n\r\n  return (\r\n    <TextField\r\n      {...rest}\r\n      type={show ? 'text' : 'password'}\r\n      variant=\"outlined\"\r\n      fullWidth\r\n      inputRef={ref}\r\n      InputProps={{\r\n        ...InputProps,\r\n        endAdornment: (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton onClick={() => setShow(s => !s)} edge=\"end\" aria-label=\"alternar visibilidade\">\r\n              {show ? <VisibilityOff/> : <Visibility/>}\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n      }}\r\n    />\r\n  );\r\n});\r\n","// src/components/Divider/SectionDivider.tsx\r\nimport { Divider, Typography, SxProps, Theme } from '@mui/material';\r\n\r\nexport interface SectionDividerProps {\r\n  label: string;\r\n  /** Largura total do divisor. Aceita %, px, rem…  – default '100%' */\r\n  width?: string | number;\r\n  /** Espessura da linha em px – default 1 */\r\n  thickness?: number;\r\n  /** Espaçamento vertical (theme.spacing) – default 3 */\r\n  spacingY?: number;\r\n  /** Qualquer extra do sx para override fino */\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\nexport function SectionDivider({\r\n  label,\r\n  width = '100%',\r\n  thickness = 1,\r\n  spacingY = 3,\r\n  sx,\r\n}: SectionDividerProps) {\r\n  return (\r\n    <Divider\r\n      textAlign=\"center\"\r\n      sx={{\r\n        width,\r\n        my: spacingY,\r\n        borderBottomWidth: thickness,\r\n        marginBottom: '0em',\r\n        ...sx,\r\n      }}\r\n    >\r\n      <Typography\r\n        variant=\"body2\"\r\n        color=\"text.secondary\"\r\n        fontWeight={500}\r\n        sx={{ px: 1 }}\r\n      >\r\n        {label}\r\n      </Typography>\r\n    </Divider>\r\n  );\r\n}\r\n","import { Link, LinkProps, styled } from '@mui/material';\r\nimport { forwardRef } from 'react';\r\n\r\nexport interface RouteLinkProps extends LinkProps {\r\n  /** Raio do sublinhado (espessura em px) – default 1 */\r\n  underlineThickness?: number;\r\n  /** Peso do texto – default 500 */\r\n  weight?: number;\r\n}\r\n\r\nconst StyledLink = styled(Link, {\r\n  shouldForwardProp: (prop) =>\r\n    prop !== 'underlineThickness' && prop !== 'weight',\r\n})<RouteLinkProps>(({ theme, underlineThickness = 1, weight = 500 }) => ({\r\n  ...theme.typography.body2,\r\n  fontWeight: weight,\r\n  color: theme.palette.text.primary,\r\n  textDecoration: 'none',\r\n  position: 'relative',\r\n  display: 'inline-block',\r\n\r\n  '&::after': {\r\n    content: '\"\"',\r\n    position: 'absolute',\r\n    left: 0,\r\n    bottom: 0,\r\n    width: '100%',\r\n    height: underlineThickness,\r\n    backgroundColor: 'currentColor',\r\n    transition: 'opacity .2s',\r\n    opacity: 1,\r\n  },\r\n\r\n  '&:hover::after': { opacity: 0.6 },\r\n  '&:focus-visible': {\r\n    outline: `2px solid ${theme.palette.primary.light}`,\r\n    outlineOffset: 2,\r\n  },\r\n}));\r\n\r\n/**\r\n * RouteLink – link estilizado com sublinhado custom.\r\n * Usa <a> por defeito mas aceita component={RouterLink} se precisares de routing.\r\n */\r\nexport const RouteLink = forwardRef<HTMLAnchorElement, RouteLinkProps>(\r\n  function RouteLink(props, ref) {\r\n    return <StyledLink ref={ref} {...props} />;\r\n  },\r\n);\r\n","import { Card, CardProps, styled } from '@mui/material';\r\nimport { shouldForwardProp } from '@mui/system';\r\n\r\ninterface WhiteCardProps extends CardProps {\r\n  /** Largura (px, %, rem…). Se omitido usa auto/max-content */\r\n  width?: string | number;\r\n  /** Altura (px, %, vh…). Opcional */\r\n  height?: string | number;\r\n}\r\n\r\nconst StyledCard = styled(Card, {\r\n  shouldForwardProp: (prop) =>\r\n    shouldForwardProp(prop) && prop !== 'width' && prop !== 'height',\r\n})<WhiteCardProps>(({ theme, width, height }) => ({\r\n  borderRadius: theme.spacing(3),      /* 24 px se spacing = 8 */\r\n  padding: theme.spacing(4),           /* 32 px */\r\n  backgroundColor: theme.palette.common.white,\r\n  width,\r\n  height,\r\n}));\r\n\r\nexport function WhiteCard(props: WhiteCardProps) {\r\n  return <StyledCard variant=\"outlined\" {...props} />;\r\n}\r\n","import { styled } from '@mui/material/styles';\r\nimport { Box, type BoxProps } from '@mui/material';\r\n\r\ninterface GradientProps extends BoxProps {\r\n  /** cor inicial (qualquer CSS color) – default theme.palette.secondary.main (verde) */\r\n  from?: string;\r\n  /** cor final – default theme.palette.primary.main (roxo) */\r\n  to?: string;\r\n  /** ângulo do gradiente em deg – default 135 */\r\n  angle?: number;\r\n}\r\n\r\nexport const GradientBackground = styled(Box, {\r\n  shouldForwardProp: (prop) =>\r\n    prop !== 'from' && prop !== 'to' && prop !== 'angle',\r\n})<GradientProps>(({ theme, from, to, angle = 135 }) => ({\r\n  minHeight: '100vh',\r\n  width: '100%',\r\n  background: `linear-gradient(${angle}deg, ${\r\n    from ?? theme.palette.secondary.main\r\n  } 0%, ${to ?? theme.palette.primary.main} 100%)`,\r\n  position: 'relative',\r\n  overflow: 'hidden',\r\n}));\r\n","// src/components/StepCard/InfoStepCard.tsx\r\nimport { Card, Box, Typography } from '@mui/material';\r\nimport { styled } from '@mui/system';\r\nimport React from 'react';\r\nimport { WhiteCard } from '../Card/WhiteCard';\r\n\r\nexport interface InfoStepCardProps {\r\n  step: number | string;\r\n  title: string;\r\n  description: string;\r\n  accentColor?: string;\r\n  backgroundColor?: string;\r\n  /** Diâmetro do círculo (px) – default 88 px */\r\n  circleSize?: number;\r\n  /** Largura do aro branco (px) – default 6 px */\r\n  circleBorderWidth?: number;\r\n  /** Cor do aro – default #fff */\r\n  circleBorderColor?: string;\r\n  cardProps?: React.ComponentProps<typeof Card>;\r\n}\r\n\r\nconst Circle = styled(Box, {\r\n  shouldForwardProp: (prop) =>\r\n    !['accentColor', 'circleSize', 'circleBorderWidth', 'circleBorderColor'].includes(\r\n      prop as string,\r\n    ),\r\n})<{\r\n  accentColor: string;\r\n  circleSize: number;\r\n  circleBorderWidth: number;\r\n  circleBorderColor: string;\r\n}>(({ theme, accentColor, circleSize, circleBorderWidth, circleBorderColor }) => ({\r\n  position: 'absolute',\r\n  top: 0,\r\n  left: '50%',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: circleSize,\r\n  height: circleSize,\r\n  borderRadius: '50%',\r\n  backgroundColor: accentColor || theme.palette.primary.main,\r\n  color: theme.palette.getContrastText(accentColor || theme.palette.primary.main),\r\n  display: 'flex',\r\n  alignItems: 'center',\r\n  justifyContent: 'center',\r\n  fontWeight: 700,\r\n  fontSize: circleSize * 0.35,\r\n  border: `${circleBorderWidth}px solid ${circleBorderColor}`,\r\n  boxSizing: 'border-box',\r\n}));\r\n\r\nconst InfoStepCard: React.FC<InfoStepCardProps> = ({\r\n  step,\r\n  title,\r\n  description,\r\n  accentColor,\r\n  backgroundColor,\r\n  circleSize = 88,\r\n  circleBorderWidth = 6,\r\n  circleBorderColor = '#fff',\r\n  cardProps,\r\n}) => {\r\n  const topSpacing = circleSize / 2; // espaço para o círculo “entrar” no cartão\r\n\r\n  return (\r\n    <Box position=\"relative\" textAlign=\"center\" mt={2} width=\"100%\">\r\n      <Circle\r\n        accentColor={accentColor || ''}\r\n        circleSize={circleSize}\r\n        circleBorderWidth={circleBorderWidth}\r\n        circleBorderColor={circleBorderColor}\r\n        marginTop='1em'\r\n      >\r\n        {step}\r\n      </Circle>\r\n\r\n      <WhiteCard\r\n        sx={{\r\n          width: '100%',            // ← garante 100% de largura\r\n          pt: '3em',\r\n          padding: '3em',\r\n          pb: 3,\r\n          px: 3,\r\n          display: 'flex',\r\n          flexDirection: 'column',\r\n          justifyContent: 'flex-start',\r\n          border: 'none',\r\n          marginTop:'2em',\r\n          backgroundColor,\r\n          ...cardProps?.sx,\r\n        }}>\r\n        <Typography variant=\"h6\" component=\"h3\" gutterBottom>\r\n          {title}\r\n        </Typography>\r\n\r\n        <Typography variant=\"body2\" sx={{ whiteSpace: 'pre-line' }}>\r\n          {description}\r\n        </Typography>\r\n      </WhiteCard>\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default InfoStepCard;\r\n","// src/components/HowItWorks/HowItWorksSection.tsx\r\nimport { Box, Stack } from '@mui/material';\r\nimport React from 'react';\r\nimport { InfoStepCard } from '../StepCard';\r\nimport { InfoStepCardProps } from '../StepCard/InfoStepCard';\r\n\r\nexport interface HowItWorksSectionProps {\r\n  /**\r\n   * Lista de passos a apresentar.\r\n   * Cada item é simplesmente o conjunto de props de <InfoStepCard />.\r\n   */\r\n  steps: InfoStepCardProps[];\r\n  /**\r\n   * Direcção dos cartões.\r\n   * - 'vertical' (por defeito) = empilhados\r\n   * - 'horizontal' = lado-a-lado\r\n   */\r\n  orientation?: 'vertical' | 'horizontal';\r\n  /**\r\n   * Espaço entre cartões em unidades de theme.spacing (default 6 = 48 px)\r\n   */\r\n  spacing?: number;\r\n  /**\r\n   * Sx extra para o <Stack />\r\n   */\r\n  sx?: object;\r\n}\r\n\r\nexport const HowItWorksSection: React.FC<HowItWorksSectionProps> = ({\r\n  steps,\r\n  orientation = 'vertical',\r\n  spacing = 6,\r\n  sx,\r\n}) => {\r\n  if (!steps?.length) return null;\r\n\r\n  return (\r\n    <Box width=\"100%\">\r\n      <Stack\r\n        direction={orientation === 'horizontal' ? 'row' : 'column'}\r\n        spacing={spacing}\r\n        alignItems=\"stretch\"\r\n        justifyContent=\"center\"\r\n        \r\n        sx={sx}\r\n      >\r\n       {steps.map((step, idx) => {\r\n          const mergedCardProps = {\r\n            ...step.cardProps,\r\n            sx: {\r\n              ...(step.cardProps?.sx || {}),\r\n              minHeight: 'auto',\r\n              \r\n            },\r\n          };\r\n\r\n          return (\r\n            <InfoStepCard\r\n              key={idx}\r\n              {...step}\r\n              cardProps={mergedCardProps}\r\n            />\r\n          );\r\n        })}\r\n      </Stack>\r\n    </Box>\r\n  );\r\n};\r\n\r\n","// src/components/Logo/Logo.tsx\r\nimport React from 'react';\r\nimport { Box, BoxProps } from '@mui/material';\r\nimport logoUrl from './LogoBiblio.svg';\r\n\r\nexport interface LogoProps extends BoxProps {\r\n  width?: string | number;\r\n  height?: string | number;\r\n}\r\n\r\nexport const Logo: React.FC<LogoProps> = ({\r\n  width  = '120px',\r\n  height = 'auto',\r\n  sx,\r\n  ...boxProps\r\n}) => (\r\n  <Box\r\n    component=\"img\"\r\n    src={logoUrl}\r\n    alt=\"Logótipo\"\r\n    sx={[\r\n      { display: 'block', width, height },\r\n      ...(Array.isArray(sx) ? sx : [sx]),\r\n    ]}\r\n    {...boxProps}\r\n  />\r\n);\r\n","import React from 'react';\r\nimport {\r\n  FormControl,\r\n  FormLabel,\r\n  FormGroup,\r\n  FormControlLabel,\r\n  Checkbox,\r\n  Radio,\r\n  RadioGroup,\r\n  SxProps,\r\n  Theme,\r\n} from '@mui/material';\r\n\r\nexport type Option = { value: string | number; label: React.ReactNode };\r\n\r\nexport interface SelectableOptionsProps {\r\n  /** Título/legenda do grupo (opcional) */\r\n  label?: string;\r\n  /** Lista de opções */\r\n  options: Option[];\r\n  /** Valor(es) selecionado(s) */\r\n  value: string | number | (string | number)[];\r\n  /** Callback de alteração */\r\n  onChange: (value: string | number | (string | number)[]) => void;\r\n  /** Tipo de controlo */\r\n  variant?: 'checkbox' | 'radio';\r\n  /** Disposição horizontal ou vertical */\r\n  row?: boolean;\r\n  /** Estilos adicionais */\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\nexport const SelectableOptions: React.FC<SelectableOptionsProps> = ({\r\n  label,\r\n  options,\r\n  value,\r\n  onChange,\r\n  variant = 'checkbox',\r\n  row = false,\r\n  sx,\r\n}) => {\r\n  const isCheckbox = variant === 'checkbox';\r\n\r\n  const handleChange = (optionValue: string | number) => (\r\n    _: React.ChangeEvent<HTMLInputElement>,\r\n    checked: boolean,\r\n  ) => {\r\n    if (isCheckbox) {\r\n      const newValue = Array.isArray(value) ? [...value] : [];\r\n      checked\r\n        ? newValue.push(optionValue)\r\n        : newValue.splice(newValue.indexOf(optionValue), 1);\r\n      onChange(newValue);\r\n    } else {\r\n      onChange(optionValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <FormControl component=\"fieldset\" sx={sx}>\r\n      {label && <FormLabel component=\"legend\">{label}</FormLabel>}\r\n\r\n      {isCheckbox ? (\r\n        <FormGroup row={row}>\r\n          {options.map(({ value: v, label: l }) => (\r\n            <FormControlLabel\r\n              key={v}\r\n              control={\r\n                <Checkbox\r\n                  checked={Array.isArray(value) && value.includes(v)}\r\n                  onChange={handleChange(v)}\r\n                />\r\n              }\r\n              label={l}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      ) : (\r\n        <RadioGroup row={row} value={value} onChange={(_, val) => onChange(val)}>\r\n          {options.map(({ value: v, label: l }) => (\r\n            <FormControlLabel\r\n              key={v}\r\n              value={v}\r\n              control={<Radio />}\r\n              label={l}\r\n            />\r\n          ))}\r\n        </RadioGroup>\r\n      )}\r\n    </FormControl>\r\n  );\r\n};\r\n","import React, { useRef, useState, useEffect } from 'react';\r\nimport { Avatar, IconButton, Box, SxProps, Theme } from '@mui/material';\r\nimport PhotoCameraIcon from '@mui/icons-material/PhotoCamera';\r\n\r\nexport interface AvatarUploadProps {\r\n  /** URL/Blob da imagem (controlado) */\r\n  value?: string;\r\n  /** Callback devolve o ficheiro e o URL criado */\r\n  onChange?: (file: File | null, url: string | null) => void;\r\n  /** Diâmetro do avatar (px) */\r\n  size?: number;\r\n  /** Placeholder (ex.: iniciais) se não houver imagem */\r\n  placeholder?: React.ReactNode;\r\n  /** Mostrar ou esconder o botão-ícone */\r\n  showIcon?: boolean;\r\n  /** Estilos extra */\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\nexport const AvatarUpload: React.FC<AvatarUploadProps> = ({\r\n  value,\r\n  onChange,\r\n  size = 128,\r\n  showIcon = true,\r\n  placeholder,\r\n  sx,\r\n}) => {\r\n  const inputRef = useRef<HTMLInputElement | null>(null);\r\n  const [url, setUrl] = useState<string | null>(value ?? null);\r\n\r\n  /* sincroniza valor controlado */\r\n  useEffect(() => {\r\n    value !== undefined && setUrl(value);\r\n  }, [value]);\r\n\r\n  /* liberta blob URL quando o componente desmonta */\r\n  useEffect(() => {\r\n    return () => {\r\n      url && url.startsWith('blob:') && URL.revokeObjectURL(url);\r\n    };\r\n  }, [url]);\r\n\r\n  const handleFile = (e: React.ChangeEvent<HTMLInputElement>) => {\r\n    const file = e.target.files?.[0];\r\n    if (!file) return;\r\n    const newUrl = URL.createObjectURL(file);\r\n    setUrl(newUrl);\r\n    onChange?.(file, newUrl);\r\n  };\r\n\r\n  return (\r\n    <Box position=\"relative\" width={size} height={size} sx={sx}>\r\n      <Avatar\r\n        src={url ?? undefined}\r\n        sx={{ width: size, height: size, fontSize: size * 0.4 }}\r\n      >\r\n        {placeholder ?? '•'}\r\n      </Avatar>\r\n\r\n      {showIcon && (\r\n        <IconButton\r\n          size=\"small\"\r\n          sx={{\r\n            position: 'absolute',\r\n            bottom: 8,\r\n            right: 8,\r\n            bgcolor: 'background.paper',\r\n            boxShadow: 1,\r\n            '&:hover': { bgcolor: 'background.paper' },\r\n          }}\r\n          onClick={() => inputRef.current?.click()}\r\n        >\r\n          <PhotoCameraIcon fontSize=\"small\" />\r\n        </IconButton>\r\n      )}\r\n\r\n      {/* input invisível */}\r\n      <input\r\n        ref={inputRef}\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        hidden\r\n        onChange={handleFile}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  IconButton,\r\n  Tooltip,\r\n  Typography,\r\n  SxProps,\r\n  Theme,\r\n} from '@mui/material';\r\nimport EditIcon from '@mui/icons-material/Edit';\r\nimport DeleteIcon from '@mui/icons-material/Delete';\r\n\r\nexport interface Action {\r\n  /** Ícone a renderizar dentro do IconButton */\r\n  icon: React.ReactNode;\r\n  /** Tooltip opcional */\r\n  tooltip?: string;\r\n  /** Callback */\r\n  onClick?: () => void;\r\n  /** Desabilitar botão? */\r\n  disabled?: boolean;\r\n}\r\n\r\nexport interface AvatarListItemProps {\r\n  avatarSrc?: string;\r\n  /** Texto principal (ex.: \"Camila, 7 anos\") */\r\n  label: React.ReactNode;\r\n  /** Lista de acções à direita */\r\n  actions?: Action[];\r\n  /** Tamanho do avatar (px) */\r\n  avatarSize?: number;\r\n  /** Estilos extra */\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\nexport const AvatarListItem: React.FC<AvatarListItemProps> = ({\r\n  avatarSrc,\r\n  label,\r\n  actions = ([\r\n    { icon: <EditIcon />, tooltip: 'Editar' },\r\n    { icon: <DeleteIcon />, tooltip: 'Remover' },\r\n  ] as Action[]),\r\n  avatarSize = 48,\r\n  sx,\r\n}) => (\r\n  <Box\r\n    display=\"flex\"\r\n    alignItems=\"center\"\r\n    gap={2}\r\n    sx={sx}\r\n  >\r\n    <Avatar\r\n      src={avatarSrc}\r\n      sx={{ width: avatarSize, height: avatarSize, flexShrink: 0 }}\r\n    />\r\n\r\n    <Typography variant=\"body1\" sx={{ flexGrow: 1 }}>\r\n      {label}\r\n    </Typography>\r\n\r\n    {actions.map(({ icon, tooltip, onClick, disabled }, idx) =>\r\n      tooltip ? (\r\n        <Tooltip title={tooltip} key={idx}>\r\n          <span>\r\n            <IconButton\r\n              onClick={onClick}\r\n              disabled={disabled}\r\n              size=\"small\"\r\n              color=\"inherit\"\r\n            >\r\n              {icon}\r\n            </IconButton>\r\n          </span>\r\n        </Tooltip>\r\n      ) : (\r\n        <IconButton\r\n          key={idx}\r\n          onClick={onClick}\r\n          disabled={disabled}\r\n          size=\"small\"\r\n          color=\"inherit\"\r\n        >\r\n          {icon}\r\n        </IconButton>\r\n      ),\r\n    )}\r\n  </Box>\r\n);\r\n","// src/components/SidebarMenu/SidebarToggle.tsx\r\nimport React from 'react';\r\nimport { IconButton, styled } from '@mui/material';\r\nimport ChevronLeftIcon from '@mui/icons-material/ChevronLeft';\r\nimport ChevronRightIcon from '@mui/icons-material/ChevronRight';\r\n\r\nexport type VerticalPos = 'top' | 'center' | 'bottom' | number;\r\n\r\ninterface Props {\r\n  open: boolean;\r\n  openWidth: number;\r\n  closedWidth: number;\r\n  onToggle: () => void;\r\n  vertical?: VerticalPos;          // ← NOVO\r\n}\r\n\r\nconst Handle = styled(IconButton)({\r\n  position: 'fixed',\r\n  transform: 'translate(-50%, -50%)',\r\n  width: 36,\r\n  height: 36,\r\n  borderRadius: '50%',\r\n  background: '#fff',\r\n  border: '1px solid #E0E0E0',\r\n  boxShadow: '0 2px 6px rgba(0,0,0,.15)',\r\n  zIndex: 1301,\r\n  '&:hover': { background: '#fff' },\r\n});\r\n\r\nconst getTop = (v: VerticalPos): string | number => {\r\n  if (typeof v === 'number') return v;\r\n  if (v === 'top') return 40;                     // 40 px do topo\r\n  if (v === 'bottom') return 'calc(100% - 40px)'; // 40 px do fundo\r\n  return '50%';                                   // center (default)\r\n};\r\n\r\nexport const SidebarToggle: React.FC<Props> = ({\r\n  open,\r\n  openWidth,\r\n  closedWidth,\r\n  onToggle,\r\n  vertical = 'center',\r\n}) => (\r\n  <Handle\r\n    onClick={onToggle}\r\n    sx={{\r\n      left: open ? openWidth : closedWidth,\r\n      top: getTop(vertical),\r\n    }}\r\n  >\r\n    {open ? <ChevronLeftIcon fontSize=\"small\" /> : <ChevronRightIcon fontSize=\"small\" />}\r\n  </Handle>\r\n);\r\n","// src/components/SidebarMenu/SidebarMenu.tsx\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItemButton,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Stack,\r\n  Tooltip,\r\n  Typography,\r\n  SxProps,\r\n  Theme,\r\n} from '@mui/material';\r\nimport { SidebarToggle, VerticalPos } from './SidebarToggle';\r\n\r\n\r\n/* ---------- Tipos ---------- */\r\nexport interface MenuItem {\r\n  label: string;\r\n  icon: React.ReactNode;\r\n  onClick?: () => void;\r\n  selected?: boolean;\r\n  disabled?: boolean;\r\n}\r\n\r\nexport interface SidebarMenuProps {\r\n  items: MenuItem[];\r\n  footerItems?: MenuItem[];\r\n  open?: boolean;\r\n  onToggle?: (open: boolean) => void;\r\n  toggleVertical?: VerticalPos;\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\n/* ---------- Constantes ---------- */\r\nconst OPEN = 260;\r\nconst CLOSED = 64;\r\n\r\nconst selectedSX = {\r\n  bgcolor: '#EEF3FF',\r\n  '& .MuiListItemIcon-root, & .MuiListItemText-primary': {\r\n    color: 'primary.main',\r\n    fontWeight: 600,\r\n  },\r\n};\r\n\r\n/* ---------- Componente ---------- */\r\nexport const SidebarMenu: React.FC<SidebarMenuProps> = ({\r\n  items,\r\n  footerItems,\r\n  open: controlled,\r\n  onToggle,\r\n  toggleVertical = 'center',\r\n  sx,\r\n}) => {\r\n  const [internal, setInternal] = useState(true);\r\n  const open = controlled ?? internal;\r\n  const toggle = () => (onToggle ? onToggle(!open) : setInternal(!open));\r\n\r\n  const render = (arr: MenuItem[]) =>\r\n    arr.map(({ label, icon, selected, ...rest }) => (\r\n      <Tooltip\r\n        key={label}\r\n        title={!open ? label : ''}\r\n        placement=\"right\"\r\n        arrow\r\n        disableInteractive\r\n      >\r\n        <ListItemButton\r\n          sx={{\r\n            my: 0.5,\r\n            borderRadius: 1,\r\n            px: open ? 2 : 0,            // sem “padding” lateral quando fechado\r\n            justifyContent: open ? 'flex-start' : 'center',\r\n            ...(selected && selectedSX),\r\n            }}\r\n          {...rest}\r\n        >\r\n          <ListItemIcon\r\n            sx={{\r\n              minWidth: 0,\r\n              mr: open ? 2 : '0',\r\n              justifyContent: 'center',\r\n            }}\r\n          >\r\n            {icon}\r\n          </ListItemIcon>\r\n          {open && <ListItemText primary={label} />}\r\n        </ListItemButton>\r\n      </Tooltip>\r\n    ));\r\n\r\n  return (\r\n    <>\r\n      <Drawer\r\n        variant=\"permanent\"\r\n        PaperProps={{\r\n          sx: {\r\n            width: open ? OPEN : CLOSED,\r\n            overflowX: 'clip', // evita barra horizontal\r\n            borderRadius: '0 8px 8px 0',\r\n            boxShadow: '0 4px 24px rgba(0,0,0,.08)',\r\n            transition: (t) =>\r\n              t.transitions.create('width', {\r\n                duration: t.transitions.duration.shorter,\r\n              }),\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            ...sx,\r\n          },\r\n        }}\r\n      >\r\n        {/* ---------- Header ---------- */}\r\n        <Stack position=\"relative\" alignItems=\"center\" spacing={1} mt={3} mb={2}>\r\n          <Box\r\n            component=\"img\"\r\n            src=\"https://placehold.co/40\"\r\n            width={40}\r\n            height={40}\r\n            borderRadius=\"50%\"\r\n          />\r\n          {open && (\r\n            <>\r\n              <Typography fontWeight={700} fontSize={14}>\r\n                Alexandre Brissos\r\n              </Typography>\r\n              <Typography variant=\"caption\" color=\"text.secondary\">\r\n                TUTOR\r\n              </Typography>\r\n              <Divider sx={{ width: '100%', mt: 1 }} />\r\n            </>\r\n          )}\r\n        </Stack>\r\n\r\n        {/* ---------- Itens ---------- */}\r\n        <List disablePadding sx={{ px: open ? 1 : 0 }}>\r\n          {render(items)}\r\n        </List>\r\n\r\n        {/* ---------- Rodapé ---------- */}\r\n        {!!footerItems?.length && (\r\n          <Box mt=\"auto\" pb={2}>\r\n            <List disablePadding sx={{ px: open ? 1 : 0 }}>\r\n              {render(footerItems)}\r\n            </List>\r\n          </Box>\r\n        )}\r\n      </Drawer>\r\n\r\n      {/* ---------- Handle ---------- */}\r\n      <SidebarToggle\r\n        open={open}\r\n        openWidth={OPEN}\r\n        closedWidth={CLOSED}\r\n        vertical={toggleVertical}\r\n        onToggle={toggle}\r\n      />\r\n    </>\r\n  );\r\n};\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Badge,\r\n  Box,\r\n  Divider,\r\n  IconButton,\r\n  List,\r\n  ListItem,\r\n  ListItemText,\r\n  Menu,\r\n  MenuItem,\r\n  Typography,\r\n  Tooltip,\r\n  IconButtonProps,\r\n} from '@mui/material';\r\nimport NotificationsNoneIcon from '@mui/icons-material/NotificationsNone';\r\nimport DeleteOutlineIcon from '@mui/icons-material/DeleteOutline';\r\n\r\nexport interface NotificationItem {\r\n  id: string;\r\n  titulo: string;\r\n  mensagem?: string;\r\n  lida?: boolean;\r\n  data?: Date;\r\n}\r\n\r\nexport interface NotificationBellProps extends Omit<IconButtonProps, 'onSelect'> {\r\n  /** Lista actual de notificações (ordenada como quiseres) */\r\n  items: NotificationItem[];\r\n  /** Clicar numa notificação */\r\n  onSelect?: (item: NotificationItem) => void;\r\n  /** Remover (apenas) uma notificação */\r\n  onRemove?: (id: string) => void;\r\n  /** Marcar todas como lidas / limpar contador  */\r\n  onClearAll?: () => void;\r\n  /** Mostrar badge mesmo quando 0 (ex.: cor cinza) */\r\n  showZero?: boolean;\r\n}\r\n\r\nexport const NotificationBell: React.FC<NotificationBellProps> = ({\r\n  items,\r\n  onSelect,\r\n  onRemove,\r\n  onClearAll,\r\n  showZero = false,\r\n  ...iconButtonProps\r\n}) => {\r\n  const [anchor, setAnchor] = useState<null | HTMLElement>(null);\r\n  const open = Boolean(anchor);\r\n\r\n  const unread = items.filter((i) => !i.lida).length;\r\n\r\n  return (\r\n    <>\r\n      <Tooltip title=\"Notificações\">\r\n        <IconButton\r\n          {...iconButtonProps}\r\n          onClick={(e) => setAnchor(e.currentTarget)}\r\n          size=\"large\"\r\n        >\r\n          <Badge\r\n            color=\"error\"\r\n            badgeContent={unread}\r\n            invisible={!showZero && unread === 0}\r\n          >\r\n            <NotificationsNoneIcon />\r\n          </Badge>\r\n        </IconButton>\r\n      </Tooltip>\r\n\r\n      <Menu\r\n        anchorEl={anchor}\r\n        open={open}\r\n        onClose={() => setAnchor(null)}\r\n        PaperProps={{ sx: { width: 300, maxHeight: 360, p: 0 } }}\r\n      >\r\n        <Box px={2} py={1.5}>\r\n          <Typography fontWeight={600}>Notificações</Typography>\r\n        </Box>\r\n\r\n        <Divider />\r\n\r\n        {items.length === 0 ? (\r\n          <Box p={3} textAlign=\"center\">\r\n            <Typography variant=\"body2\" color=\"text.secondary\">\r\n              Sem notificações.\r\n            </Typography>\r\n          </Box>\r\n        ) : (\r\n          <List dense disablePadding>\r\n            {items.map((n) => (\r\n              <ListItem\r\n                key={n.id}\r\n                alignItems=\"flex-start\"\r\n                secondaryAction={\r\n                  onRemove && (\r\n                    <IconButton\r\n                      edge=\"end\"\r\n                      size=\"small\"\r\n                      onClick={() => onRemove(n.id)}\r\n                    >\r\n                      <DeleteOutlineIcon fontSize=\"small\" />\r\n                    </IconButton>\r\n                  )\r\n                }\r\n                sx={{\r\n                  bgcolor: n.lida ? 'background.paper' : 'action.hover',\r\n                  cursor: 'pointer',\r\n                  '&:hover': { bgcolor: 'action.selected' },\r\n                }}\r\n                onClick={() => {\r\n                  onSelect?.(n);\r\n                  setAnchor(null);\r\n                }}\r\n              >\r\n                <ListItemText\r\n                  primary={\r\n                    <Typography\r\n                      variant=\"body2\"\r\n                      fontWeight={n.lida ? 400 : 600}\r\n                    >\r\n                      {n.titulo}\r\n                    </Typography>\r\n                  }\r\n                  secondary={\r\n                    n.mensagem && (\r\n                      <Typography\r\n                        variant=\"caption\"\r\n                        color=\"text.secondary\"\r\n                        noWrap\r\n                      >\r\n                        {n.mensagem}\r\n                      </Typography>\r\n                    )\r\n                  }\r\n                />\r\n              </ListItem>\r\n            ))}\r\n          </List>\r\n        )}\r\n\r\n        {!!items.length && (\r\n          <>\r\n            <Divider />\r\n            <MenuItem onClick={() => onClearAll?.()}>\r\n              <Typography variant=\"body2\" textAlign=\"center\" width=\"100%\">\r\n                Limpar todas\r\n              </Typography>\r\n            </MenuItem>\r\n          </>\r\n        )}\r\n      </Menu>\r\n    </>\r\n  );\r\n};\r\n","import React from 'react';\r\nimport {\r\n  Avatar,\r\n  Box,\r\n  FormControl,\r\n  InputLabel,\r\n  ListItem,\r\n  ListItemAvatar,\r\n  ListItemText,\r\n  MenuItem,\r\n  Select,\r\n  SelectChangeEvent,\r\n} from '@mui/material';\r\nimport PersonOutlineIcon from '@mui/icons-material/PersonOutline';\r\n\r\nexport interface ChildOption {\r\n  id: string;\r\n  nome: string;\r\n  avatar?: string;\r\n}\r\n\r\nexport interface AvatarSelectProps {\r\n  label: string;\r\n  options: ChildOption[];\r\n  value: string | '';\r\n  onChange: (id: string) => void;\r\n  disabled?: boolean;\r\n  /** ReactNode para o avatar de placeholder (default ícone pessoa) */\r\n  placeholderAvatar?: React.ReactNode;\r\n  /** Largura mínima, útil em <Stack spacing> */\r\n  minWidth?: number | string;\r\n}\r\n\r\nexport const AvatarSelect: React.FC<AvatarSelectProps> = ({\r\n  label,\r\n  options,\r\n  value,\r\n  onChange,\r\n  disabled = false,\r\n  placeholderAvatar,\r\n  minWidth,\r\n}) => {\r\n  const current = options.find((o) => o.id === value);\r\n\r\n  /* devolve só o id */\r\n  const handle = (e: SelectChangeEvent<string>) => onChange(e.target.value);\r\n\r\n  const Placeholder = (\r\n    <Box display=\"flex\" alignItems=\"center\" gap={1} color=\"text.secondary\">\r\n      <Avatar sx={{ width: 24, height: 24, bgcolor: '#E0E0E0' }}>\r\n        {placeholderAvatar ?? <PersonOutlineIcon fontSize=\"small\" />}\r\n      </Avatar>\r\n      {label}\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <FormControl\r\n      fullWidth\r\n      variant=\"standard\"\r\n      disabled={disabled}\r\n      sx={{ minWidth }}\r\n    >\r\n      <InputLabel shrink>{label}</InputLabel>\r\n\r\n      <Select\r\n        value={value}\r\n        onChange={handle}\r\n        renderValue={() =>\r\n          value && current ? (\r\n            <Box display=\"flex\" alignItems=\"center\" gap={1}>\r\n              <Avatar src={current.avatar} sx={{ width: 24, height: 24 }}>\r\n                {current.nome[0]}\r\n              </Avatar>\r\n              {current.nome}\r\n            </Box>\r\n          ) : (\r\n            Placeholder\r\n          )\r\n        }\r\n      >\r\n        {options.map((o) => (\r\n          <MenuItem key={o.id} value={o.id}>\r\n            <ListItem disableGutters>\r\n              <ListItemAvatar sx={{ minWidth: 32 }}>\r\n                <Avatar src={o.avatar} sx={{ width: 32, height: 32, marginRight: '1em' }}>\r\n                  {o.nome[0]}\r\n                </Avatar>\r\n              </ListItemAvatar>\r\n              <ListItemText primary={o.nome} />\r\n            </ListItem>\r\n          </MenuItem>\r\n        ))}\r\n      </Select>\r\n    </FormControl>\r\n  );\r\n};\r\n","import React, { useMemo } from 'react';\r\nimport { Box, LinearProgress, linearProgressClasses, Typography } from '@mui/material';\r\n\r\nexport interface QuizProgressBarProps {\r\n  /** Passo actual (1-based) */\r\n  passo: number;\r\n  /** Número total de passos/perguntas */\r\n  total: number;\r\n  /** Mostrar percentagem por cima?  */\r\n  mostrarTexto?: boolean;\r\n}\r\n\r\n/**\r\n * Barra de progresso animada para o Quiz.\r\n */\r\nexport const QuizProgressBar: React.FC<QuizProgressBarProps> = ({\r\n  passo,\r\n  total,\r\n  mostrarTexto = true,\r\n}) => {\r\n  /* evita divisões por zero */\r\n  const pct = useMemo(() => (total > 0 ? (passo / total) * 100 : 0), [passo, total]);\r\n\r\n  return (\r\n    <Box>\r\n      {mostrarTexto && (\r\n        <Typography variant=\"caption\" mb={0.5} display=\"block\">\r\n          {Math.round(pct)}% concluído\r\n        </Typography>\r\n      )}\r\n\r\n      <LinearProgress\r\n        variant=\"determinate\"\r\n        value={pct}\r\n        sx={{\r\n          height: 8,\r\n          borderRadius: 4,\r\n          [`&.${linearProgressClasses.colorPrimary}`]: {\r\n            bgcolor: '#E4E4E4',\r\n          },\r\n          [`& .${linearProgressClasses.bar}`]: {\r\n            borderRadius: 4,\r\n            /* animação suave */\r\n            transition: 'transform .4s ease-out',\r\n            bgcolor: 'primary.main',\r\n          },\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n","// src/components/Table/ColumnFilterPopper.tsx\r\nimport React, { useMemo, useState, useEffect } from 'react';\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  ClickAwayListener,\r\n  IconButton,\r\n  MenuItem,\r\n  Popper,\r\n  Stack,\r\n  TextField,\r\n  Typography,\r\n} from '@mui/material';\r\nimport ClearIcon from '@mui/icons-material/Clear';\r\nimport DoneIcon from '@mui/icons-material/Done';\r\n\r\ninterface Props<T = any> {\r\n  open: boolean;\r\n  anchorEl: HTMLElement | null;\r\n  values: T[];\r\n  selected: Set<T>;\r\n  onClose: () => void;\r\n  onApply: (set: Set<T>) => void;\r\n}\r\n\r\nexport function ColumnFilterPopper<T>({\r\n  open,\r\n  anchorEl,\r\n  values,\r\n  selected,\r\n  onClose,\r\n  onApply,\r\n}: Props<T>) {\r\n  const [query, setQuery] = useState('');\r\n  const [local, setLocal] = useState<Set<T>>(new Set(selected));\r\n\r\n  useEffect(() => {\r\n    if (open) setLocal(new Set(selected));\r\n  }, [open, selected]);\r\n\r\n  const list = useMemo(\r\n    () =>\r\n      values.filter((v) =>\r\n        String(v ?? '')\r\n          .toLowerCase()\r\n          .includes(query.toLowerCase()),\r\n      ),\r\n    [values, query],\r\n  );\r\n\r\n  const toggle = (v: T) => {\r\n    const next = new Set(local);\r\n    next.has(v) ? next.delete(v) : next.add(v);\r\n    setLocal(next);\r\n  };\r\n\r\n  return (\r\n    <Popper open={open} anchorEl={anchorEl} placement=\"bottom-start\">\r\n      <ClickAwayListener onClickAway={onClose}>\r\n        <Box\r\n          bgcolor=\"#fff\"\r\n          borderRadius={1}\r\n          boxShadow={3}\r\n          p={2}\r\n          maxHeight={300}\r\n          overflow=\"auto\"\r\n          minWidth={220}\r\n        >\r\n          <Stack direction=\"row\" justifyContent=\"space-between\" alignItems=\"center\" mb={1}>\r\n            <Typography variant=\"subtitle2\">Filtrar</Typography>\r\n            <IconButton size=\"small\" onClick={() => setLocal(new Set())}>\r\n              <ClearIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          </Stack>\r\n\r\n          <TextField\r\n            size=\"small\"\r\n            placeholder=\"Pesquisar…\"\r\n            fullWidth\r\n            value={query}\r\n            onChange={(e) => setQuery(e.target.value)}\r\n            sx={{ mb: 1 }}\r\n          />\r\n\r\n          {list.map((v) => (\r\n            <MenuItem key={String(v)} onClick={() => toggle(v)}>\r\n              <Checkbox size=\"small\" checked={local.has(v)} sx={{ mr: 1 }} />\r\n              {String(v ?? '—')}\r\n            </MenuItem>\r\n          ))}\r\n\r\n          <Box textAlign=\"right\" mt={1}>\r\n            <IconButton size=\"small\" color=\"primary\" onClick={() => (onApply(local), onClose())}>\r\n              <DoneIcon fontSize=\"inherit\" />\r\n            </IconButton>\r\n          </Box>\r\n        </Box>\r\n      </ClickAwayListener>\r\n    </Popper>\r\n  );\r\n}\r\n","// src/components/Table/SimpleDataTable.tsx\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Box,\r\n  Chip,\r\n  Table,\r\n  TableBody,\r\n  TableCell,\r\n  TableContainer,\r\n  TableHead,\r\n  TablePagination,\r\n  TableRow,\r\n  TableSortLabel,\r\n  Paper,\r\n  Stack,\r\n  SxProps,\r\n  Theme,\r\n} from '@mui/material';\r\nimport FilterAltIcon from '@mui/icons-material/FilterAlt';\r\nimport { ColumnFilterPopper } from './ColumnFilterPopper';\r\n\r\nexport interface DataColumn<Row = any> {\r\n  label: string;\r\n  field?: keyof Row;\r\n  render?: (row: Row) => React.ReactNode;\r\n  width?: number | string;\r\n  align?: 'left' | 'center' | 'right';\r\n  filterable?: boolean;\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\nexport interface SimpleDataTableProps<Row = any> {\r\n  columns: DataColumn<Row>[];\r\n  rows: Row[];\r\n  rowsPerPageOptions?: number[];\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\nexport function SimpleDataTable<Row>({\r\n  columns,\r\n  rows,\r\n  rowsPerPageOptions = [5, 10, 25],\r\n  sx,\r\n}: SimpleDataTableProps<Row>) {\r\n  /* paginação */\r\n  const [page, setPage] = useState(0);\r\n  const [perPage, setPerPage] = useState(rowsPerPageOptions[0]);\r\n\r\n  /* filtros */\r\n  const [filters, setFilters] = useState<Record<string, Set<any>>>({});\r\n  const [anchor, setAnchor] = useState<HTMLElement | null>(null);\r\n  const [colFilter, setColFilter] = useState<DataColumn<Row> | null>(null);\r\n\r\n  /* aplica filtros activos */\r\n  const filteredRows = rows.filter((r) =>\r\n    columns.every((c) => {\r\n      const active = filters[c.label];\r\n      if (!active?.size) return true;\r\n      const val = c.field ? r[c.field] : c.render?.(r);\r\n      return active.has(val);\r\n    }),\r\n  );\r\n\r\n  /* paginação calculada */\r\n  const slice = filteredRows.slice(page * perPage, page * perPage + perPage);\r\n\r\n  /* open popper */\r\n  const openFilter = (el: HTMLElement, col: DataColumn<Row>) => {\r\n    setAnchor(el);\r\n    setColFilter(col);\r\n  };\r\n\r\n  /* valores únicos da coluna */\r\n  const colValues = colFilter\r\n    ? [...new Set(rows.map((r) => (colFilter.field ? r[colFilter.field] : colFilter.render!(r))))]\r\n    : [];\r\n\r\n  return (\r\n    <Paper sx={{ width: '100%', overflow: 'hidden', ...sx }}>\r\n      <TableContainer>\r\n        <Table>\r\n          <TableHead>\r\n            <TableRow>\r\n              {columns.map((c) => (\r\n                <TableCell\r\n                  key={c.label}\r\n                  align={c.align}\r\n                  sx={{ width: c.width, fontWeight: 700, ...c.sx }}\r\n                >\r\n                  <Stack\r\n                    direction=\"row\"\r\n                    spacing={0.5}\r\n                    alignItems=\"center\"\r\n                    sx={{ cursor: c.filterable ? 'pointer' : 'default' }}\r\n                    onClick={\r\n                      c.filterable\r\n                        ? (e) => openFilter(e.currentTarget as HTMLElement, c)\r\n                        : undefined\r\n                    }\r\n                  >\r\n                    {c.label}\r\n                    {c.filterable && (\r\n                      <FilterAltIcon\r\n                        fontSize=\"small\"\r\n                        color={filters[c.label]?.size ? 'primary' : 'inherit'}\r\n                      />\r\n                    )}\r\n                  </Stack>\r\n                </TableCell>\r\n              ))}\r\n            </TableRow>\r\n          </TableHead>\r\n\r\n          <TableBody>\r\n            {slice.map((row, i) => (\r\n              <TableRow key={i}>\r\n                {columns.map((c) => (\r\n                  <TableCell key={String(c.label)} align={c.align}>\r\n                    {c.render ? c.render(row) : (row as any)[c.field!]}\r\n                  </TableCell>\r\n                ))}\r\n              </TableRow>\r\n            ))}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n\r\n      {/* paginação */}\r\n      <TablePagination\r\n        component=\"div\"\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        count={filteredRows.length}\r\n        rowsPerPage={perPage}\r\n        page={page}\r\n        onPageChange={(_, p) => setPage(p)}\r\n        onRowsPerPageChange={(e) => {\r\n          setPerPage(parseInt(e.target.value, 10));\r\n          setPage(0);\r\n        }}\r\n        labelRowsPerPage=\"Items por página:\"\r\n      />\r\n\r\n      {/* pop-up de filtro */}\r\n      {colFilter && (\r\n        <ColumnFilterPopper\r\n          open\r\n          anchorEl={anchor}\r\n          values={colValues}\r\n          selected={filters[colFilter.label] ?? new Set()}\r\n          onClose={() => setColFilter(null)}\r\n          onApply={(set) => setFilters({ ...filters, [colFilter.label]: set })}\r\n        />\r\n      )}\r\n    </Paper>\r\n  );\r\n}\r\n","// src/components/BookCard/BookCard.tsx\r\nimport React, { useState, useEffect } from 'react';\r\nimport {\r\n  Card,\r\n  CardMedia,\r\n  CardContent,\r\n  Typography,\r\n  Box,\r\n  Rating,\r\n  TextField,\r\n  Button,\r\n  useTheme\r\n} from '@mui/material';\r\n\r\nexport type BookCardVariant = 'view' | 'edit' | 'reserve';\r\n\r\nexport interface BookCardProps {\r\n  variant?: BookCardVariant;\r\n  title: string;\r\n  coverImage: string;\r\n  startDate?: string;\r\n  endDate?: string;\r\n  rating?: number;\r\n  comment?: string;\r\n  onSave?: (rating: number, comment: string, coverImage: string) => void;\r\n  onReserve?: () => void;\r\n}\r\n\r\nexport const BookCard: React.FC<BookCardProps> = ({\r\n  variant = 'view',\r\n  title,\r\n  coverImage,\r\n  startDate,\r\n  endDate,\r\n  rating = 0,\r\n  comment = '',\r\n  onSave,\r\n  onReserve,\r\n}) => {\r\n  const theme = useTheme();\r\n  const [currentCoverImage, setCurrentCoverImage] = useState(coverImage);\r\n  useEffect(() => {\r\n    setCurrentCoverImage(coverImage);\r\n  }, [coverImage]);\r\n\r\n  const [currentRating, setCurrentRating] = useState(rating);\r\n  const [currentComment, setCurrentComment] = useState(comment);\r\n\r\n  const handleSave = () => onSave?.(currentRating, currentComment, currentCoverImage);\r\n  const handleReserve = () => onReserve?.();\r\n\r\n  return (\r\n    <Card\r\n      sx={{\r\n        width: 300,\r\n        borderRadius: 2,\r\n        bgcolor: theme.palette.secondary.light,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        overflow: 'hidden',\r\n      }}\r\n    >\r\n      {/* FIX: background-image em vez de img */}\r\n      <CardMedia\r\n        image={currentCoverImage}\r\n        title={title}\r\n        sx={{\r\n          pt: '150%',\r\n          backgroundSize: 'cover',\r\n          backgroundPosition: 'center',\r\n        }}\r\n      />\r\n\r\n      <CardContent sx={{ flexGrow: 1, display: 'flex', flexDirection: 'column', gap: 1 }}>\r\n        <Typography variant=\"h6\">{title}</Typography>\r\n\r\n        {variant === 'view' && (\r\n          <>\r\n            {startDate && endDate && (\r\n              <Typography variant=\"body2\">\r\n                Início: {startDate} — Concluído: {endDate}\r\n              </Typography>\r\n            )}\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Rating value={rating} readOnly size=\"small\" />\r\n            </Box>\r\n            {comment && (\r\n              <Typography variant=\"body2\" sx={{ fontStyle: 'italic' }}>\r\n                “{comment}”\r\n              </Typography>\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {variant === 'edit' && (\r\n          <>\r\n            <TextField\r\n              label=\"URL da imagem da capa\"\r\n              type=\"url\"\r\n              value={currentCoverImage}\r\n              onChange={e => setCurrentCoverImage(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Rating\r\n                value={currentRating}\r\n                onChange={(_, v) => setCurrentRating(v ?? 0)}\r\n              />\r\n            </Box>\r\n            <TextField\r\n              label=\"Comentário\"\r\n              multiline\r\n              minRows={3}\r\n              value={currentComment}\r\n              onChange={e => setCurrentComment(e.target.value)}\r\n              fullWidth\r\n            />\r\n            <Box mt=\"auto\" textAlign=\"center\">\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleSave}>\r\n                Guardar avaliação\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        )}\r\n\r\n        {variant === 'reserve' && (\r\n          <>\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Rating value={rating} readOnly />\r\n            </Box>\r\n            <Box mt=\"auto\" textAlign=\"center\">\r\n              <Button variant=\"contained\" color=\"primary\" onClick={handleReserve}>\r\n                Reservar\r\n              </Button>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </CardContent>\r\n    </Card>\r\n  );\r\n};\r\n","// src/hooks/useAgendaFeed.ts\r\nimport { useState, useEffect } from 'react';\r\n\r\nexport interface AgendaItem {\r\n  title:       string;\r\n  link:        string;\r\n  description: string;\r\n  pubDate:     string;\r\n  author?:     string;\r\n  categories:  string[];\r\n  thumbnailUrl?: string;\r\n  [key: string]: any;\r\n}\r\n\r\nexport function useAgendaFeed(feedUrl: string) {\r\n  const [items, setItems]     = useState<AgendaItem[] | null>(null);\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError]     = useState<Error | null>(null);\r\n\r\n  useEffect(() => {\r\n    if (!feedUrl) return;\r\n    setLoading(true);\r\n    fetch(feedUrl)\r\n      .then(res => res.text())\r\n      .then(xmlText => {\r\n        const dom      = new window.DOMParser().parseFromString(xmlText, 'text/xml');\r\n        const rawItems = Array.from(dom.querySelectorAll('item'));\r\n        const parsed: AgendaItem[] = rawItems.map(itemEl => {\r\n          const obj: any = {};\r\n          // extrai todos os campos simples\r\n          itemEl.childNodes.forEach(node => {\r\n            if (node.nodeType !== Node.ELEMENT_NODE) return;\r\n            const el      = node as Element;\r\n            const name    = el.tagName;\r\n            const text    = el.textContent?.trim() ?? '';\r\n            if (obj[name]) {\r\n              if (Array.isArray(obj[name])) obj[name].push(text);\r\n              else obj[name] = [obj[name], text];\r\n            } else {\r\n              obj[name] = text;\r\n            }\r\n          });\r\n\r\n          // primeiro tenta o <enclosure url=\"…\">\r\n          let thumb: string | undefined;\r\n          const enc = itemEl.querySelector('enclosure[url]');\r\n          if (enc?.getAttribute('url')) {\r\n            thumb = enc.getAttribute('url')!.trim();\r\n          } else {\r\n            // fallback: procura <img> dentro da description\r\n            const desc = obj['description'] as string;\r\n            if (desc) {\r\n              const dd  = new window.DOMParser().parseFromString(desc, 'text/html');\r\n              const img = dd.querySelector('img');\r\n              if (img?.src) thumb = img.src;\r\n            }\r\n          }\r\n\r\n          return {\r\n            title:       obj['title']       || '',\r\n            link:        obj['link']        || '',\r\n            description: obj['description'] || '',\r\n            pubDate:     obj['pubDate']     || '',\r\n            author:      obj['author']      || undefined,\r\n            categories:  (obj['category']\r\n                           ? Array.isArray(obj['category'])\r\n                             ? obj['category']\r\n                             : [obj['category']]\r\n                           : []) as string[],\r\n            thumbnailUrl: thumb,\r\n            ...obj\r\n          } as AgendaItem;\r\n        });\r\n        setItems(parsed);\r\n      })\r\n      .catch(err => setError(err))\r\n      .finally(() => setLoading(false));\r\n  }, [feedUrl]);\r\n\r\n  return { items, loading, error };\r\n}\r\n","// src/components/AgendaFeed/AgendaFeed.tsx\r\nimport React from 'react';\r\nimport {\r\n  Box,\r\n  Paper,\r\n  Typography,\r\n  Button,\r\n  useTheme,\r\n  CardMedia\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/GridLegacy';\r\nimport AccessTimeIcon from '@mui/icons-material/AccessTime';\r\nimport LocationOnIcon from '@mui/icons-material/LocationOn';\r\nimport { AgendaItem, useAgendaFeed } from '../../hooks/useAgendaFeed';\r\n\r\nexport interface AgendaFeedProps {\r\n  feedUrl: string;\r\n  columns?: number;\r\n  imageRatio?: string;\r\n  contentPadding?: number;\r\n  cardMaxWidth?: string | number;\r\n  actions?: (item: AgendaItem) => React.ReactNode;\r\n}\r\n\r\nexport const AgendaFeed: React.FC<AgendaFeedProps> = ({\r\n  feedUrl,\r\n  columns        = 2,\r\n  imageRatio     = '16/9',   // usar aspectRatio moderno\r\n  contentPadding = 2,\r\n  cardMaxWidth   = '360px',\r\n  actions\r\n}) => {\r\n  const theme = useTheme();\r\n  const { items, loading, error } = useAgendaFeed(feedUrl);\r\n\r\n  if (loading) return <Typography>Carregando eventos…</Typography>;\r\n  if (error)   return <Typography color=\"error\">Erro: {error.message}</Typography>;\r\n  if (!items?.length) return <Typography>Sem eventos.</Typography>;\r\n\r\n  // função helper para decodificar HTML entities e extrair texto\r\n  const decodeHtml = (html: string) => {\r\n    const doc = new DOMParser().parseFromString(html, 'text/html');\r\n    return doc.documentElement.textContent || '';\r\n  };\r\n\r\n  return (\r\n    <Grid container spacing={2} justifyContent=\"center\">\r\n      {items.map((item, i) => {\r\n        // decodifica o description\r\n        const fullText = decodeHtml(item.description);\r\n        // tenta extrair Data:xxx e Local:yyy\r\n        const dataMatch    = fullText.match(/Data:\\s*([^|]+)/i);\r\n        const localMatch   = fullText.match(/Local:\\s*([^|]+)/i);\r\n        // resumo antes de qualquer “Data:”\r\n        const resumo       = fullText.split(/Data:/i)[0].trim();\r\n\r\n        return (\r\n          <Grid\r\n            key={i}\r\n            item xs={12} sm={Math.floor(12 / columns)}\r\n            sx={{ display: 'flex', justifyContent: 'center' }}\r\n          >\r\n            <Paper\r\n              elevation={2}\r\n              sx={{\r\n                width:         '100%',\r\n                maxWidth:      cardMaxWidth,\r\n                display:       'flex',\r\n                flexDirection: 'column',\r\n                borderRadius:  3,\r\n                overflow:      'hidden',\r\n                bgcolor:       theme.palette.background.paper,\r\n              }}\r\n            >\r\n              {/* imagem no topo */}\r\n              {item.thumbnailUrl && (\r\n                <CardMedia\r\n                  component=\"img\"\r\n                  image={item.thumbnailUrl}\r\n                  alt={item.title}\r\n                  sx={{\r\n                    width:               '100%',\r\n                    aspectRatio:         imageRatio,\r\n                    objectFit:           'cover',\r\n                  }}\r\n                />\r\n              )}\r\n\r\n              {/* conteúdo textual */}\r\n              <Box sx={{ p: contentPadding }}>\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  component=\"h3\"\r\n                  gutterBottom\r\n                  sx={{ fontWeight: 600 }}\r\n                >\r\n                  {item.title}\r\n                </Typography>\r\n\r\n                {/* Data com ícone */}\r\n                {dataMatch && (\r\n                  <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                    <AccessTimeIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\r\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                      {dataMatch[1].trim()}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n\r\n                {/* Local com ícone */}\r\n                {localMatch && (\r\n                  <Box display=\"flex\" alignItems=\"center\" mb={1}>\r\n                    <LocationOnIcon fontSize=\"small\" sx={{ mr: 0.5, color: 'text.secondary' }} />\r\n                    <Typography variant=\"subtitle2\" color=\"text.secondary\">\r\n                      {localMatch[1].trim()}\r\n                    </Typography>\r\n                  </Box>\r\n                )}\r\n\r\n                {/* Resumo */}\r\n                <Typography variant=\"body2\" sx={{ mb: 2 }}>\r\n                  {resumo.length > 140 ? resumo.slice(0, 140) + '…' : resumo}\r\n                </Typography>\r\n\r\n                {/* Ações */}\r\n                <Box textAlign=\"right\">\r\n                  {actions?.(item) ?? (\r\n                    <Button\r\n                      variant=\"contained\"\r\n                      size=\"small\"\r\n                      href={item.link}\r\n                      target=\"_blank\"\r\n                    >\r\n                      Saber mais\r\n                    </Button>\r\n                  )}\r\n                </Box>\r\n              </Box>\r\n            </Paper>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  );\r\n};\r\n","// src/components/AgendaFeed/AgendaLargeCard.tsx\r\nimport React, { useState } from 'react';\r\nimport {\r\n  Paper,\r\n  CardMedia,\r\n  Box,\r\n  Typography,\r\n  Button,\r\n  Collapse,\r\n  useTheme\r\n} from '@mui/material';\r\nimport { AgendaItem } from '../../hooks/useAgendaFeed';\r\n\r\nexport interface AgendaLargeCardProps extends AgendaItem {\r\n  /** largura do cartão (ex: '100%', '600px') */\r\n  width?: string | number;\r\n  /** proporção da área de imagem (ex: '16/9') */\r\n  imageRatio?: string;\r\n  /** número de caracteres antes de truncar */\r\n  truncateLength?: number;\r\n}\r\n\r\nexport const AgendaLargeCard: React.FC<AgendaLargeCardProps> = ({\r\n  title,\r\n  pubDate,\r\n  description,\r\n  thumbnailUrl,\r\n  link,\r\n  width           = '100%',\r\n  imageRatio      = '16/9',\r\n  truncateLength  = 200,\r\n}) => {\r\n  const [expanded, setExpanded] = useState(false);\r\n  const theme = useTheme();\r\n\r\n  // decodifica e limpa HTML\r\n  const decodeHtml = (html: string) => {\r\n    const doc = new DOMParser().parseFromString(html, 'text/html');\r\n    return doc.documentElement.textContent || '';\r\n  };\r\n  const fullText = decodeHtml(description);\r\n  const displayText = expanded\r\n    ? fullText\r\n    : fullText.length > truncateLength\r\n      ? fullText.slice(0, truncateLength) + '…'\r\n      : fullText;\r\n\r\n  return (\r\n    <Paper\r\n      elevation={4}\r\n      sx={{\r\n        width,\r\n        borderRadius: 4,\r\n        overflow: 'hidden',\r\n        mx: 'auto',\r\n      }}\r\n    >\r\n      {/* IMAGEM */}\r\n      {thumbnailUrl && (\r\n        <Box position=\"relative\">\r\n          <CardMedia\r\n            component=\"img\"\r\n            image={thumbnailUrl}\r\n            alt={title}\r\n            sx={{\r\n              width:       '100%',\r\n              aspectRatio: imageRatio,\r\n              objectFit:   'cover',\r\n            }}\r\n          />\r\n          {/* TÍTULO SOBRE A IMAGEM */}\r\n          <Box\r\n            sx={{\r\n              position: 'absolute',\r\n              bottom:   0,\r\n              left:     0,\r\n              width:    '100%',\r\n              bgcolor:  'rgba(0,0,0,0.4)',\r\n              color:    '#fff',\r\n              p:        2,\r\n            }}\r\n          >\r\n            <Typography variant=\"h5\" component=\"h2\">\r\n              {title}\r\n            </Typography>\r\n          </Box>\r\n        </Box>\r\n      )}\r\n\r\n      {/* CONTEÚDO */}\r\n      <Box sx={{ p: 3, bgcolor: theme.palette.background.paper }}>\r\n        {/* DATA */}\r\n        <Typography variant=\"subtitle1\" color=\"text.secondary\" gutterBottom>\r\n          {new Date(pubDate).toLocaleDateString('pt-PT', {\r\n            day: '2-digit', month: 'long', year: 'numeric'\r\n          })}\r\n        </Typography>\r\n\r\n        {/* DESCRIÇÃO TRUNCADA / COMPLETA */}\r\n        <Collapse in sx={{ mb: 2 }}>\r\n          <Typography variant=\"body1\" paragraph>\r\n            {displayText}\r\n          </Typography>\r\n        </Collapse>\r\n\r\n        {/* BOTÃO */}\r\n        <Box textAlign=\"right\">\r\n          <Button\r\n            variant=\"contained\"\r\n            onClick={() => setExpanded(e => !e)}\r\n            sx={{ mr: 1 }}\r\n          >\r\n            {expanded ? 'Ver menos' : 'Saber mais'}\r\n          </Button>\r\n          <Button\r\n            variant=\"outlined\"\r\n            href={link}\r\n            target=\"_blank\"\r\n          >\r\n            Ir para página\r\n          </Button>\r\n        </Box>\r\n      </Box>\r\n    </Paper>\r\n  );\r\n};\r\n","// src/components/FilterBar/FilterBar.tsx\r\nimport React, { useState, ReactElement } from 'react';\r\nimport {\r\n  Box,\r\n  Button,\r\n  Menu,\r\n  MenuItem,\r\n  Chip,\r\n  Divider,\r\n  useTheme\r\n} from '@mui/material';\r\nimport ArrowDropDownIcon from '@mui/icons-material/ArrowDropDown';\r\nimport CloseIcon from '@mui/icons-material/Close';\r\n\r\nexport interface FilterOption {\r\n  value: string;\r\n  label: string;\r\n}\r\n\r\nexport interface FilterDefinition {\r\n  id: string;\r\n  label: string;\r\n  options: FilterOption[];\r\n}\r\n\r\nexport interface FilterBarProps {\r\n  filters: FilterDefinition[];\r\n  selected: Record<string, string[]>;\r\n  onChange: (filterId: string, values: string[]) => void;\r\n  icons?: Record<string, ReactElement>;\r\n  chipIcons?: Record<string, ReactElement>;\r\n}\r\n\r\nexport const FilterBar: React.FC<FilterBarProps> = ({\r\n  filters,\r\n  selected,\r\n  onChange,\r\n  icons = {},\r\n  chipIcons = {}\r\n}) => {\r\n  const theme = useTheme();\r\n  const [anchorEl, setAnchorEl] = useState<null | HTMLElement>(null);\r\n  const [activeFilter, setActiveFilter] = useState<string | null>(null);\r\n\r\n  const openMenu = (e: React.MouseEvent<HTMLElement>, filterId: string) => {\r\n    setAnchorEl(e.currentTarget);\r\n    setActiveFilter(filterId);\r\n  };\r\n  const closeMenu = () => {\r\n    setAnchorEl(null);\r\n    setActiveFilter(null);\r\n  };\r\n\r\n  const handleOptionClick = (value: string) => {\r\n    if (!activeFilter) return;\r\n    const curr = selected[activeFilter] || [];\r\n    const next = curr.includes(value)\r\n      ? curr.filter(v => v !== value)\r\n      : [...curr, value];\r\n    onChange(activeFilter, next);\r\n  };\r\n\r\n  const handleDeleteChip = (filterId: string, value: string) => {\r\n    const curr = selected[filterId] || [];\r\n    onChange(filterId, curr.filter(v => v !== value));\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      {/* Botões de filtros */}\r\n      <Box display=\"flex\" gap={1} mb={1}>\r\n        {filters.map(f => (\r\n          <Button\r\n            key={f.id}\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            onClick={e => openMenu(e, f.id)}\r\n            startIcon={icons[f.id]}\r\n            endIcon={<ArrowDropDownIcon />}\r\n            sx={{\r\n              backgroundColor: theme.palette.primary.main,\r\n              '&:hover': { backgroundColor: theme.palette.primary.dark },\r\n            }}\r\n          >\r\n            {f.label}\r\n          </Button>\r\n        ))}\r\n      </Box>\r\n\r\n      {/* Divider */}\r\n      <Divider sx={{ mb: 1 }} />\r\n\r\n      {/* Chips das selecções */}\r\n      <Box display=\"flex\" gap={1} flexWrap=\"wrap\" mb={1}>\r\n        {Object.entries(selected).flatMap(([filterId, vals]) =>\r\n          vals.map(val => {\r\n            const def = filters.find(f => f.id === filterId)!;\r\n            const label = def.options.find(o => o.value === val)?.label || val;\r\n            const key = `${filterId}-${val}`;\r\n\r\n            // Extrai um único ReactElement ou undefined\r\n            const chipIcon: ReactElement | undefined = chipIcons[filterId];\r\n\r\n            return (\r\n              <Chip\r\n                key={key}\r\n                label={label}\r\n                size=\"small\"\r\n                onDelete={() => handleDeleteChip(filterId, val)}\r\n                deleteIcon={<CloseIcon />}\r\n                icon={chipIcon}\r\n                sx={{\r\n                  backgroundColor: theme.palette.primary.light,\r\n                  color: theme.palette.primary.contrastText,\r\n                }}\r\n              />\r\n            );\r\n          })\r\n        )}\r\n      </Box>\r\n\r\n      {/* Menu */}\r\n      <Menu\r\n        anchorEl={anchorEl}\r\n        open={Boolean(anchorEl)}\r\n        onClose={closeMenu}\r\n      >\r\n        {activeFilter && filters\r\n          .find(f => f.id === activeFilter)!\r\n          .options.map(opt => {\r\n            const isSelected = (selected[activeFilter] || []).includes(opt.value);\r\n            return (\r\n              <MenuItem\r\n                key={opt.value}\r\n                selected={isSelected}\r\n                onClick={() => handleOptionClick(opt.value)}\r\n              >\r\n                {opt.label}\r\n                {isSelected && <CloseIcon fontSize=\"small\" sx={{ ml: 1 }} />}\r\n              </MenuItem>\r\n            );\r\n          })\r\n        }\r\n      </Menu>\r\n    </Box>\r\n  );\r\n};\r\n","// src/components/Paginator/Paginator.tsx\r\nimport React from 'react';\r\nimport { Stack, Pagination, PaginationProps as MuiPaginationProps } from '@mui/material';\r\n\r\nexport interface PaginatorProps {\r\n  /**\r\n   * Número total de páginas\r\n   */\r\n  count: number;\r\n  /**\r\n   * Página actual (1-based)\r\n   * Se não fornecido, o componente será uncontrolled\r\n   */\r\n  page?: number;\r\n  /**\r\n   * Callback quando o utilizador muda de página\r\n   */\r\n  onChange?: (event: React.ChangeEvent<unknown>, page: number) => void;\r\n  /**\r\n   * Número de páginas a mostrar ao lado da página actual\r\n   * @default 1\r\n   */\r\n  siblingCount?: number;\r\n  /**\r\n   * Número de páginas de fronteira a mostrar (início/fim)\r\n   * @default 1\r\n   */\r\n  boundaryCount?: number;\r\n  /**\r\n   * Mostrar botões “Primeiro” e “Último”\r\n   * @default false\r\n   */\r\n  showFirstButton?: boolean;\r\n  showLastButton?: boolean;\r\n  /**\r\n   * Props extras para o <Pagination> do MUI\r\n   */\r\n  muiProps?: Omit<MuiPaginationProps, 'count' | 'page' | 'onChange' | 'siblingCount' | 'boundaryCount' | 'showFirstButton' | 'showLastButton'>;\r\n}\r\n\r\nexport const Paginator: React.FC<PaginatorProps> = ({\r\n  count,\r\n  page,\r\n  onChange,\r\n  siblingCount    = 1,\r\n  boundaryCount   = 1,\r\n  showFirstButton = false,\r\n  showLastButton  = false,\r\n  muiProps        = {},\r\n}) => (\r\n  <Stack alignItems=\"center\" sx={{ my: 2 }}>\r\n    <Pagination\r\n      count={count}\r\n      page={page}\r\n      onChange={onChange}\r\n      siblingCount={siblingCount}\r\n      boundaryCount={boundaryCount}\r\n      showFirstButton={showFirstButton}\r\n      showLastButton={showLastButton}\r\n      color=\"primary\"\r\n      {...muiProps}\r\n    />\r\n  </Stack>\r\n);\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport {\r\n  Box,\r\n  Card,\r\n  CardActionArea,\r\n  Typography,\r\n  SxProps,\r\n  Theme,\r\n  Avatar,\r\n} from '@mui/material';\r\nimport Grid from '@mui/material/GridLegacy';\r\n\r\n/* ---------- Tipos ---------- */\r\nexport interface QuizOption {\r\n  label: string;\r\n  value: string | number;\r\n}\r\n\r\nexport interface QuizQuestionProps {\r\n  pergunta: string;\r\n  opcoes: QuizOption[];\r\n  valor?: QuizOption['value'];\r\n  onChange?: (valor: QuizOption['value']) => void;\r\n  topoIcon?: React.ReactNode;\r\n  sx?: SxProps<Theme>;\r\n}\r\n\r\n/* ---------- Componente ---------- */\r\nexport const QuizQuestion: React.FC<QuizQuestionProps> = ({\r\n  pergunta,\r\n  opcoes,\r\n  valor,\r\n  onChange,\r\n  topoIcon,\r\n  sx,\r\n}) => (\r\n  <Box textAlign=\"center\" sx={sx}>\r\n    {/* Pergunta */}\r\n    <Box\r\n      position=\"relative\"\r\n      bgcolor=\"rgba(122,68,189,0.08)\"\r\n      color=\"primary.dark\"\r\n      px={4}\r\n      py={3}\r\n      borderRadius={2}\r\n      mb={4}\r\n    >\r\n      {/* {topoIcon && (\r\n        <Avatar\r\n          sx={{\r\n            position: 'absolute',\r\n            top: -20,\r\n            right: '50%',\r\n            transform: 'translateX(50%)',\r\n            bgcolor: 'primary.main',\r\n            width: 40,\r\n            height: 40,\r\n            border: '3px solid #fff',\r\n          }}\r\n        >\r\n          {topoIcon}\r\n        </Avatar>\r\n      )} */}\r\n\r\n      <Typography variant=\"h6\" fontWeight={600}>\r\n        {pergunta}\r\n      </Typography>\r\n    </Box>\r\n\r\n    {/* Opções */}\r\n    <Grid container spacing={4} justifyContent=\"center\">\r\n      {opcoes.map((o) => {\r\n        const selected = o.value === valor; // ← declarada aqui\r\n\r\n        return (\r\n          <Grid item key={o.value}>\r\n            <Card\r\n              elevation={0}\r\n              sx={{\r\n                width: 120,\r\n                height: 120,\r\n                borderRadius: 2,\r\n                bgcolor: selected ? 'primary.main' : 'rgba(122,68,189,0.08)',\r\n                color: selected ? '#fff' : 'primary.dark',\r\n                transition: 'all .25s',\r\n              }}\r\n            >\r\n              <CardActionArea\r\n                sx={{\r\n                  width: '100%',\r\n                  height: '100%',\r\n                  display: 'flex',\r\n                  alignItems: 'center',\r\n                  justifyContent: 'center',\r\n                  px: 2,\r\n                }}\r\n                onClick={() => onChange?.(o.value)}\r\n              >\r\n                <Typography\r\n                  variant=\"h6\"\r\n                  fontWeight={600}\r\n                  textAlign=\"center\"\r\n                  sx={{ userSelect: 'none' }}\r\n                >\r\n                  {o.label}\r\n                </Typography>\r\n              </CardActionArea>\r\n            </Card>\r\n          </Grid>\r\n        );\r\n      })}\r\n    </Grid>\r\n  </Box>\r\n);\r\n","// src/components/SearchBar/SearchBar.tsx\r\nimport React, { KeyboardEvent } from 'react';\r\nimport {\r\n  TextField,\r\n  InputAdornment,\r\n  IconButton,\r\n  TextFieldProps\r\n} from '@mui/material';\r\nimport SearchIcon from '@mui/icons-material/Search';\r\nimport ClearIcon  from '@mui/icons-material/Clear';\r\n\r\nexport interface SearchBarProps {\r\n  /** Valor actual do input */\r\n  value: string;\r\n  /** Chamado sempre que o valor muda */\r\n  onChange: (newValue: string) => void;\r\n  /** Chamado quando o utilizador pressiona Enter ou clica em pesquisar */\r\n  onSearch?: (value: string) => void;\r\n  /** Placeholder do input */\r\n  placeholder?: string;\r\n  /** Props extra para o TextField */\r\n  textFieldProps?: Omit<TextFieldProps, 'value' | 'onChange' | 'placeholder'>;\r\n}\r\n\r\nexport const SearchBar: React.FC<SearchBarProps> = ({\r\n  value,\r\n  onChange,\r\n  onSearch,\r\n  placeholder = 'Pesquisar…',\r\n  textFieldProps\r\n}) => {\r\n  const handleKeyPress = (e: KeyboardEvent<HTMLInputElement>) => {\r\n    if (e.key === 'Enter' && onSearch) {\r\n      onSearch(value);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TextField\r\n      value={value}\r\n      onChange={e => onChange(e.target.value)}\r\n      placeholder={placeholder}\r\n      onKeyPress={handleKeyPress}\r\n      variant=\"outlined\"\r\n      size=\"small\"\r\n      fullWidth\r\n      InputProps={{\r\n        startAdornment: (\r\n          <InputAdornment position=\"start\">\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => onSearch?.(value)}\r\n              edge=\"start\"\r\n            >\r\n              <SearchIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ),\r\n        endAdornment: value ? (\r\n          <InputAdornment position=\"end\">\r\n            <IconButton\r\n              size=\"small\"\r\n              onClick={() => onChange('')}\r\n              edge=\"end\"\r\n            >\r\n              <ClearIcon fontSize=\"small\" />\r\n            </IconButton>\r\n          </InputAdornment>\r\n        ) : null,\r\n      }}\r\n      {...textFieldProps}\r\n    />\r\n  );\r\n};\r\n\r\nexport default SearchBar;\r\n"]}